package com.ninjacontrol.krisp

object Symbols {
    val def = MalSymbol("def!")
    val let = MalSymbol("let*")
    val `do` = MalSymbol("do")
    val `if` = MalSymbol("if")
    val fn = MalSymbol("fn*")
    val quote = MalSymbol("quote")
    val quasiquote = MalSymbol("quasiquote")
    val quasiquoteexpand = MalSymbol("quasiquoteexpand")
    val unquote = MalSymbol("unquote")
    val eval = MalSymbol("eval")
    val `splice-unquote` = MalSymbol("splice-unquote")
    val concat = MalSymbol("concat")
    val cons = MalSymbol("cons")
    val vec = MalSymbol("vec")
    val defMacro = MalSymbol("defmacro!")
    val macroExpand = MalSymbol("macroexpand")
    val `try` = MalSymbol("try*")
    val `catch` = MalSymbol("catch*")
    val plus = MalSymbol("+")
    val minus = MalSymbol("-")
    val multiply = MalSymbol("*")
    val divide = MalSymbol("/")
    val modulo = MalSymbol("%")
    val prn = MalSymbol("prn")
    val `pr-str` = MalSymbol("pr-str")
    val str = MalSymbol("str")
    val println = MalSymbol("println")
    val list = MalSymbol("list")
    val isList = MalSymbol("list?")
    val isEmpty = MalSymbol("empty?")
    val first = MalSymbol("first")
    val rest = MalSymbol("rest")
    val nth = MalSymbol("nth")
    val count = MalSymbol("count")
    val eq = MalSymbol("=")
    val gt = MalSymbol(">")
    val gte = MalSymbol(">=")
    val lt = MalSymbol("<")
    val lte = MalSymbol("<=")
    val not = MalSymbol("not")
    val `read-string` = MalSymbol("read-string")
    val slurp = MalSymbol("slurp")
    val atom = MalSymbol("atom")
    val deref = MalSymbol("deref")
    val isAtom = MalSymbol("atom?")
    val `reset!` = MalSymbol("reset!")
    val `swap!` = MalSymbol("swap!")
    val `throw` = MalSymbol("throw")
    val apply = MalSymbol("apply")
    val map = MalSymbol("map")
    val isTrue = MalSymbol("true?")
    val isFalse = MalSymbol("false?")
    val isNil = MalSymbol("nil?")
    val isSymbol = MalSymbol("symbol?")
    val symbol = MalSymbol("symbol")
    val keyword = MalSymbol("keyword")
    val isVector = MalSymbol("vector?")
    val isNumber = MalSymbol("number?")
    val isMap = MalSymbol("map?")
    val isString = MalSymbol("string?")
    val isFn = MalSymbol("fn?")
    val isMacro = MalSymbol("macro?")
    val isKeyword = MalSymbol("keyword?")
    val isSequential = MalSymbol("sequential?")
    val vector = MalSymbol("vector")
    val `hash-map` = MalSymbol("hash-map")
    val assoc = MalSymbol("assoc")
    val dissoc = MalSymbol("dissoc")
    val get = MalSymbol("get")
    val vals = MalSymbol("vals")
    val keys = MalSymbol("keys")
    val doesContain = MalSymbol("contains?")
    val readline = MalSymbol("readline")
    val meta = MalSymbol("meta")
    val `with-meta` = MalSymbol("with-meta")
    val `time-ms` = MalSymbol("time-ms")
    val seq = MalSymbol("seq")
    val conj = MalSymbol("conj")
}
